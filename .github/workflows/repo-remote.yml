name: HLS to Repo (Remote)

on:
  repository_dispatch:
    types: [repo]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Install Aria2/FFmpeg/Python
        run: |
          aria2c https://github.com/eugeneware/ffmpeg-static/releases/latest/download/linux-x64
          chmod +x linux-x64
          sudo mv linux-x64  /usr/local/bin/ffmpeg
          pip --quiet install bs4 && python ./aria2/add_tracker.py
      
      - name: Get JAV info
        run: |
            python javinfo.py ${{ github.event.client_payload.repo }}

      - name: Download video
        run: |
            aria2c --conf-path=./aria2.conf "${{ github.event.client_payload.url }}"

      - name: Process video
        run: |
          ffmpeg -hide_banner -i ${{ github.event.client_payload.path }} \
                 -c copy -sn -f hls -bsf:v h264_mp4toannexb -hls_time 1 \
                 -hls_list_size 0 -hls_segment_filename hls%4d.ts index.m3u8
          rm -rf ${{ github.event.client_payload.path }}
     
      - name: Push to Github
        env:
          OWNER: ${{ github.actor }}
          REPO: ${{ github.event.client_payload.repo }}
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          gh repo create ${REPO} --public
          git config --global user.name "Your Name"
          git config --global user.email "you@example.com"
          ## move video into dir
          mkdir -p dir/res/
          mv *.m3u8 *.ts dir/res/
          mkdir -p dir/img/
          ## move pictures into dir
          imgs=(*.jpg)
          if [ -f ${imgs[0]} ];then
            mv *.jpg dir/img/
          fi
          ## move index.html into dir
          mv index.html dir/
          ## get into dir and upload to github
          cd dir
          git init
          git add img res/*.m3u8 index.html
          git commit -m "Add img and index"
          git remote add origin https://${OWNER}:${GITHUB_TOKEN}@github.com/${OWNER}/${REPO}.git
          git push -u origin master
          for i in {0..9};do
            for j in {0..9};do
              files=(res/$i$j??.ts)
              if [ -f ${files[0]} ];then
                git add "${files[@]}"
                git commit -m "$i$j st commit"
                git push
              else
                exit 0
              fi
            done
          done

      - name: Build & Deploy
        env:
          GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          TOKEN: ${{ github.token }}
          ACTOR: ${{ github.actor }}
          REPO: ${{ github.repository }}
        run: |
          cd home
          mkdir -p build
          mkdir -p page
          python build.py
          mv *.html css page build
          cd build
          git config --global init.defaultBranch main
          git init
          git config user.email "${ACTOR}@users.noreply.github.com"
          git config user.name "${ACTOR}"
          git add .
          git commit -m "Deploy ${GITHUB_SHA}"
          git push -f "https://${ACTOR}:${TOKEN}@github.com/${REPO}.git" main:gh-pages

      - name: Seed back
        run: |
          sed -i "s/seed-time=0//" ./aria2/aria2.conf
          aria2c --conf-path=./aria2/aria2.conf *.torrent